{"version":3,"sources":["components/Footer/index.tsx","images/icons.svg","components/Header/index.tsx","components/Button/index.tsx","data/mockShipments.ts","components/Input/index.tsx","components/Select/index.tsx","components/Forms/NewShipment.tsx","utils/API/shipments.ts","components/Loader/index.tsx","components/Modal/index.tsx","views/Shipments/index.tsx","views/ShipmentDetails/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","title","url","map","link","to","Header","viewBox","xlinkHref","Icons","Button","formHandler","type","icon","handleClick","iconMarkup","position","name","onClick","defaultProps","undefined","mockShipments","status","id","technician","platform","drone","technicalCheck","Input","hasLabel","labelText","classList","value","placeholder","handleInput","required","$input","useRef","htmlFor","onInput","current","ref","Select","handleChange","options","onChange","e","target","disabled","option","newShipment","NewShipment","handleCancel","handleSubmit","useState","form","setFormValue","showFormError","setFormErrorState","fields","kind","field","Object","values","every","x","Loader","Modal","subtitle","children","handleClose","useEffect","document","body","style","overflow","modal","Shipments","history","useHistory","isLoading","setLoading","shipments","setShipments","searchQuery","setSearchQuery","showModal","setModalState","actions","executeAction","action","console","log","Promise","resolve","storedShipments","localStorage","getItem","JSON","parse","then","response","length","shipment","push","setItem","stringify","saveShipment","ShipmentDetails","useParams","App","basename","exact","path","render","component","Routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"uMA2BeA,EAxBA,WAQb,OACE,qBAAKC,UAAU,SAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGA,UAAU,eAAb,mCACA,oBAAIA,UAAU,gBAAd,SAXQ,CACZ,CACEC,MAAO,OACPC,IAAK,UASMC,KAAI,SAACC,GAAD,OACT,6BACE,cAAC,IAAD,CAAMC,GAAID,EAAKF,IAAKF,UAAU,qBAA9B,SAAoDI,EAAKH,SADlDG,EAAKH,kBCjBX,MAA0B,kCCoB1BK,EAhBA,kBACX,qBAAKN,UAAU,SAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAMK,GAAG,aAAaL,UAAU,eAAhC,SACE,oBAAIA,UAAU,oBAAd,0BAEF,sBAAKA,UAAU,eAAf,UACE,mBAAGA,UAAU,oBAAb,2BACA,qBAAKO,QAAQ,YAAYP,UAAU,oBAAnC,SACE,qBAAKQ,UAAS,UAAKC,EAAL,wB,uBCGpBC,EAAS,SAAC,GAAkE,IAAhET,EAA+D,EAA/DA,MAAOU,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,YAC1CC,EAAa,kBACf,qBAAKR,QAAQ,YAAYP,UAAS,4CAAgCa,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMG,SAAtC,iCAAgEH,QAAhE,IAAgEA,OAAhE,EAAgEA,EAAMI,MAAxG,SACE,qBAAKT,UAAS,UAAKC,EAAL,mBAAcI,QAAd,IAAcA,OAAd,EAAcA,EAAMI,WAIxC,OACE,yBAAQL,KAAMD,EAAc,SAAW,SAAUX,UAAS,yBAAoBY,EAApB,YAA4BC,GAAQ,qBAAuBK,QAASJ,EAA9H,UACGD,GAA0B,SAAlBA,EAAKG,UAAuBD,IACpCd,EACAY,GAA0B,UAAlBA,EAAKG,UAAwBD,QAK5CL,EAAOS,aAAe,CACpBN,UAAMO,EACNT,aAAa,GAGAD,Q,QCnCFW,EAA4B,CACvC,CACEC,OAAQ,QACRC,GAAI,aACJC,WAAY,cACZC,SAAU,QACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,eACZC,SAAU,QACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,aACZC,SAAU,QACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,iBACZC,SAAU,QACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,kBACZC,SAAU,OACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,oBACZC,SAAU,OACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,kBACZC,SAAU,OACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,kBACZC,SAAU,QACVC,MAAO,WACPC,eAAgB,UAElB,CACEL,OAAQ,QACRC,GAAI,aACJC,WAAY,iBACZC,SAAU,QACVC,MAAO,WACPC,eAAgB,WC3DdC,EAAQ,SAAC,GAA2G,IAAzGC,EAAwG,EAAxGA,SAAUC,EAA8F,EAA9FA,UAAWC,EAAmF,EAAnFA,UAAWnB,EAAwE,EAAxEA,KAAMK,EAAkE,EAAlEA,KAAMe,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SACtFC,EAASC,iBAAyB,MAMxC,OACE,sBAAKrC,UAAU,aAAf,UACE,uBAAOA,UAAS,4BAAuB6B,EAAW,GAAK,mBAAqBS,QAASrB,EAArF,SACGY,EAAWC,EAAYb,IAE1B,uBACEjB,UAAS,4BAAuB+B,GAChCnB,KAAMA,EACNK,KAAMA,EACNM,GAAIN,EACJe,MAAOA,EACPC,YAAaA,EACbM,QAjBU,WACVH,EAAOI,SACTN,EAAYjB,EAAMmB,EAAOI,QAAQR,QAgB/BS,IAAKL,EACLD,SAAUA,QAMlBP,EAAMT,aAAe,CACnBU,UAAU,EACVC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPG,UAAU,GAGGP,QCrCTc,EAAS,SAAC,GAA2F,IAAzFzB,EAAwF,EAAxFA,KAAM0B,EAAkF,EAAlFA,aAAcb,EAAoE,EAApEA,UAAWD,EAAyD,EAAzDA,SAAUe,EAA+C,EAA/CA,QAASX,EAAsC,EAAtCA,YAAaD,EAAyB,EAAzBA,MAI/E,OACE,sBAAKhC,UAAU,aAAf,UACE,uBAAOA,UAAS,4BAAuB6B,EAAW,GAAK,mBAAqBS,QAASrB,EAArF,SACGY,EAAWC,EAAYb,IAE1B,yBAAQjB,UAAU,qBAAqBgC,MAAOA,EAAOf,KAAMA,EAAMM,GAAIN,EAAM4B,SAR9D,SAACC,GAChBH,EAAaG,EAAEC,OAAO9B,KAAM6B,EAAEC,OAAOf,QAOnC,UACGC,GAAe,wBAAQD,MAAM,GAAGgB,UAAQ,EAAzB,SAA2Bf,IAC1CW,EAAQzC,KAAI,SAAC8C,GAAD,OACX,wBAAQjB,MAAOiB,EAAf,SACGA,GADyBA,aAStCP,EAAOvB,aAAe,CACpBU,UAAU,EACVC,UAAW,GACXE,MAAO,IAGMU,QC3BTQ,EAAwB,CAC5B5B,OAAQ,QACRC,GAAI,GACJC,WAAY,GACZC,SAAU,GACVC,MAAO,GACPC,eAAgB,UA4GHwB,EAzGK,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,aACnC,EAA6BC,mBAAmBJ,GAAhD,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA2CF,oBAAkB,GAA7D,mBAAOG,EAAP,KAAsBC,EAAtB,KACMxB,EAAc,SAACjB,EAAce,GACjCwB,EAAa,2BAAKD,GAAN,kBAAatC,EAAOe,KAE5ByB,GACFC,GAAkB,IAYhBC,EAAS,CACb,CACEC,KAAM,QACN3C,KAAM,KACNL,KAAM,OACNiB,UAAU,EACVC,UAAW,WACXG,YAAa,WACbE,UAAU,GAEZ,CACEyB,KAAM,QACN3C,KAAM,aACNL,KAAM,SACNiB,UAAU,EACVC,UAAW,aACXG,YAAa,kBACbF,UAAW,SACXI,UAAU,GAEZ,CACEyB,KAAM,SACN3C,KAAM,WACNY,UAAU,EACVC,UAAW,WACXc,QCjDqB,CAAC,QAAS,OAAQ,SDkDvCX,YAAa,mBAEf,CACE2B,KAAM,SACN3C,KAAM,QACNY,UAAU,EACVC,UAAW,QACXc,QCrDkB,CAAC,YDsDnBX,YAAa,iBAIjB,OACE,uBAAMjC,UAAU,OAAhB,UACE,qBAAKA,UAAU,eAAf,SACG2D,EAAOxD,KAAI,SAAC0D,GAEX,OADiBA,EAATD,MAEN,IAAK,SACH,OACE,cAAC,EAAD,CACE3C,KAAM4C,EAAM5C,KACZY,SAAUgC,EAAMhC,SAChBC,UAAW+B,EAAM/B,UACjBc,QAASiB,EAAMjB,QACfD,aAAcT,EACdF,MAAOuB,EAAKM,EAAM5C,MAClBgB,YAAa4B,EAAM5B,aACd4B,EAAM5C,MAGjB,IAAK,QACH,OACE,cAAC,EAAD,CACEA,KAAM4C,EAAM5C,KACZgB,YAAa4B,EAAM5B,YACnBrB,KAAMiD,EAAMjD,KACZiB,SAAUgC,EAAMhC,SAChBC,UAAW+B,EAAM/B,UACjBI,YAAaA,EAEbF,MAAOuB,EAAKM,EAAM5C,MAClBc,UAAW8B,EAAM9B,UACjBI,SAAU0B,EAAM1B,UAHX0B,EAAM5C,MAMjB,QACE,OAAO,WAIdwC,GAAiB,mBAAGzD,UAAU,cAAb,qCAClB,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQc,YAAasC,EAAcnD,MAAM,SAASW,KAAK,YACvD,cAAC,EAAD,CAAQE,YAxFG,WADUgD,OAAOC,OAAOR,GAAMS,OAAM,SAAAC,GAAC,MAAU,KAANA,KAItDZ,EAAaE,GAEbG,GAAkB,IAmFezD,MAAM,sBAAsBW,KAAK,mBEhHzDsD,EANA,kBACX,qBAAKlE,UAAU,sBAAf,SACE,qBAAKA,UAAU,uBCMfmE,EAAQ,SAAC,GAA4D,IAA1DlE,EAAyD,EAAzDA,MAAOmE,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAO1C,OANAC,qBAAU,WAGR,OAFAC,SAASC,KAAKC,MAAMC,SAAW,SAExB,WAAQH,SAASC,KAAKC,MAAMC,SAAW,WAC7C,IAGD,qBAAK3E,UAAU,QAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAQY,KAAK,QAAQC,KAAM,CAACG,SAAU,OAAQC,KAAM,SAAUhB,MAAM,GAAGa,YAAawD,MAEtF,sBAAKtE,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BC,IAC9B,mBAAGD,UAAU,kBAAb,SAAgCoE,OAElC,qBAAKpE,UAAU,cAAf,SACGqE,UAOXF,EAAMhD,aAAe,CACnBlB,MAAO,GACPmE,SAAU,IAGGD,QC7BTS,EAAQ,CACZ3E,MAAO,eACPmE,SACE,gGAgIWS,EA7HG,WAChB,IAAMC,EAAUC,cAChB,EAAgCzB,oBAAkB,GAAlD,mBAAO0B,EAAP,KAAkBC,EAAlB,KACA,EAAkC3B,mBAA0B,IAA5D,mBAAO4B,EAAP,KAAkBC,EAAlB,KACA,EAAsC7B,mBAAiB,IAAvD,mBAAO8B,EAAP,KAAoBC,EAApB,KACA,EAAmC/B,oBAAkB,GAArD,mBAAOgC,EAAP,KAAkBC,EAAlB,KACMC,EAAU,CAAC,OAAQ,UAInBC,EAAgB,SAACC,GAErBC,QAAQC,IAAI,YAAaF,IAe3B,OAPAnB,qBAAU,WHjCV,IAAIsB,SAAQ,SAACC,GACX,IAAMC,EAAkBC,aAAaC,QAAQ,aAE7CH,EAD8BC,EAAkBG,KAAKC,MAAMJ,GAAmB1E,MGgC/D+E,MAAK,SAACC,GACnBpB,GAAYD,GACZG,EAAakB,QAEd,IAGD,qCACE,qBAAKrG,UAAU,YAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAIA,UAAU,mBAAd,sBACW,8CAEX,sBAAKA,UAAU,qBAAf,UACE,cAAC,EAAD,CACEY,KAAK,SACLK,KAAK,SACLgB,YAAY,SACZD,MAAOoD,EACPlD,YAlCO,SAACjB,EAAce,GAClCqD,EAAerD,IAkCHD,UAAU,WAEZ,cAAC,EAAD,CACE9B,MAAM,eACNW,KAAK,UACLE,YAAa,kBAAMyE,GAAeD,YAIxC,qBAAKtF,UAAS,6BAAwBgF,GAAa,8BAAnD,SACGA,EACC,cAAC,EAAD,IAEA,uBAAOhF,UAAU,mBAAjB,SACE,gCACGkF,EAAUoB,OAAS,EAClBpB,EAAU/E,KAAI,SAACoG,GAAD,OACZ,qBAAIvG,UAAU,uBAAd,UACE,qBAAIA,UAAU,oDAAd,UACE,0CACCuG,EAASjF,UAEZ,qBAAItB,UAAU,wBAAd,UACE,4CACCuG,EAAShF,MAEZ,qBAAIvB,UAAU,wBAAd,UACE,8CACCuG,EAAS/E,cAEZ,qBAAIxB,UAAU,wBAAd,UACE,4CACCuG,EAAS9E,YAEZ,qBAAIzB,UAAU,wBAAd,UACE,yCACCuG,EAAS7E,SAEZ,qBAAI1B,UAAU,wBAAd,UACE,mDACCuG,EAAS5E,kBAEZ,oBAAI3B,UAAU,wBAAd,SACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,EAAD,CACEC,MAAM,UACNa,YAAa,kBAAMgE,EAAQ0B,KAAR,oBAA0BD,EAAShF,MACtDX,KAAK,UACLC,KAAM,CAAEG,SAAU,QAASC,KAAM,YAEnC,cAAC,EAAD,CACEA,KAAK,UACLgB,YAAY,UACZW,QAAS4C,EACT7C,aAAc8C,WArCoBc,EAAShF,OA4CrD,6BACE,oBAAIvB,UAAU,wCAAd,iDASfsF,GACC,cAAC,EAAD,2BAAWV,GAAX,IAAkBN,YAAa,kBAAMiB,GAAeD,IAApD,SACE,cAAC,EAAD,CACElC,aAAc,kBAAMmC,GAAeD,IACnCjC,aAvGgB,SAACkD,IHrBR,SAACA,EAAoBrB,GAArB,OACnB,IAAIW,SAAQ,SAACC,GACXE,aAAaS,QAAQ,YAAaP,KAAKQ,UAAL,CAAgBH,GAAhB,mBAA6BrB,MAC/DY,GAAQ,OGmBRa,CAAaJ,EAAUrB,GAAWkB,MAAK,WACrCjB,EAAa,CAACoB,GAAF,mBAAerB,KAC3BK,GAAeD,gBCnBNsB,EAZS,WACtB,IAAQrF,EAAOsF,cAAPtF,GAER,OACE,qBAAKvB,UAAU,mBAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,oBAAIA,UAAU,0BAAd,SAAyCuB,SCalCuF,EAhBH,kBACR,qBAAK9G,UAAU,MAAf,SACE,eAAC,IAAD,CAAe+G,SAAS,cAAxB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,cAAC,IAAD,CAAU7G,GAAG,kBAEf,cAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,aAAaE,UAAWC,IAC1C,cAAC,IAAD,CAAOH,KAAK,gBAAgBE,UAAWC,OAEzC,cAAC,EAAD,UCHOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFtD,SAASuD,eAAe,SAM1BV,M","file":"static/js/main.0bba6132.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Footer = () => {\n  const links = [\n    {\n      title: 'Help',\n      url: '/help'\n    }\n  ]\n\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__container\">\n        <p className=\"footer__copy\">Powered by Nuvo Cargo</p>\n        <ul className=\"footer__links\">\n          {links.map((link) => (\n            <li key={link.title}>\n              <Link to={link.url} className=\"footer__links-item\">{link.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n\n","export default __webpack_public_path__ + \"static/media/icons.0f8ad784.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Icons from '../../images/icons.svg'\n\nconst Header = () => (\n    <div className=\"header\">\n      <div className=\"header__container\">\n        <Link to=\"/shipments\" className=\"header__logo\">\n          <h1 className=\"header__logo-text\">Dronocargo</h1>\n        </Link>\n        <div className=\"header__user\">\n          <p className=\"header__user-name\">Regina Zepeda</p>\n          <svg viewBox=\"0 0 20 20\" className=\"header__user-icon\">\n            <use xlinkHref={`${Icons}#avatar`} />\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n\nexport default Header\n\n","import React from 'react'\nimport Icons from '../../images/icons.svg'\n\ninterface Icon {\n  position: 'left' | 'right'\n  name: string\n}\n\ninterface ButtonProps {\n  title: string\n  formHandler?: boolean\n  type: string\n  icon?: Icon\n  handleClick: () => void\n}\n\nconst Button = ({ title, formHandler, type, icon, handleClick }: ButtonProps) => {\n  const iconMarkup = () => (\n      <svg viewBox=\"0 0 20 20\" className={`button__icon button__icon--${icon?.position} button__icon--${icon?.name}`}>\n        <use xlinkHref={`${Icons}#${icon?.name}`} />\n      </svg>\n    )\n\n  return (\n    <button type={formHandler ? \"submit\" : \"button\"} className={`button button--${type} ${icon && 'button--with-icon'}`} onClick={handleClick}>\n      {icon && icon.position === 'left' && iconMarkup()}\n      {title}\n      {icon && icon.position === 'right' && iconMarkup()}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  icon: undefined,\n  formHandler: false\n};\n\nexport default Button\n\n","import { Shipment } from '../models/Shipment';\n\nexport const mockShipments: Shipment[] = [\n  {\n    status: 'Ready',\n    id: '009-300FCT',\n    technician: 'Ben Santana',\n    platform: 'Gamma',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '008-300FCT',\n    technician: 'Juan Reynosa',\n    platform: 'Gamma',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '007-300FCT',\n    technician: 'Shan Smith',\n    platform: 'Gamma',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '006-300FCT',\n    technician: 'Gerardo Torres',\n    platform: 'Gamma',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '005-300FCT',\n    technician: 'Leonardo Flores',\n    platform: 'Beta',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '004-300FCT',\n    technician: 'Miguel Obregón',\n    platform: 'Beta',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '003-300FCT',\n    technician: 'Mariano Arribas',\n    platform: 'Beta',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '002-300FCT',\n    technician: 'Jessica Salinas',\n    platform: 'Alpha',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  },\n  {\n    status: 'Ready',\n    id: '001-300FCT',\n    technician: 'Ernesto Garcia',\n    platform: 'Alpha',\n    drone: 'DJI-004Q',\n    technicalCheck: 'Passed'\n  }\n]\n","import React, { useRef } from 'react'\n\ninterface InputProps {\n  hasLabel?: boolean\n  labelText?: string\n  type: any\n  classList?: string\n  name: string\n  value?: string\n  placeholder: any\n  required?: boolean\n  handleInput: (name: string, value: string) => void\n}\n\nconst Input = ({ hasLabel, labelText, classList, type, name, value, placeholder, handleInput, required }: InputProps) => {\n  const $input = useRef<HTMLInputElement>(null)\n  const onInput = () => {\n    if ($input.current) {\n      handleInput(name, $input.current.value)\n    }\n  }\n  return (\n    <div className=\"form-group\">\n      <label className={`form-group__label ${hasLabel ? '' : 'visually-hidden'}`} htmlFor={name}>\n        {hasLabel ? labelText : name}\n      </label>\n      <input\n        className={`form-group__input ${classList}`}\n        type={type}\n        name={name}\n        id={name}\n        value={value}\n        placeholder={placeholder}\n        onInput={onInput}\n        ref={$input}\n        required={required}\n      />\n    </div>\n  )\n}\n\nInput.defaultProps = {\n  hasLabel: false,\n  labelText: '',\n  classList: '',\n  value: '',\n  required: false\n};\n\nexport default Input\n\n","import React from 'react'\n\nexport interface SelectProps {\n  hasLabel?: boolean\n  labelText?: string\n  name: string\n  placeholder?: string\n  options: any\n  value?: string\n  handleChange: (name: string, value: string) => void\n}\n\nconst Select = ({ name, handleChange, labelText, hasLabel, options, placeholder, value }: SelectProps) => {\n  const onChange = (e: any) => {\n    handleChange(e.target.name, e.target.value)\n  }\n  return (\n    <div className=\"form-group\">\n      <label className={`form-group__label ${hasLabel ? '' : 'visually-hidden'}`} htmlFor={name}>\n        {hasLabel ? labelText : name}\n      </label>\n      <select className=\"form-group__select\" value={value} name={name} id={name} onChange={onChange}>\n        {placeholder && <option value=\"\" disabled>{placeholder}</option>}\n        {options.map((option: string) => (\n          <option value={option} key={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n\nSelect.defaultProps = {\n  hasLabel: false,\n  labelText: '',\n  value: ''\n};\n\nexport default Select\n","import React, { useState } from 'react'\nimport { Shipment } from '../../models/Shipment'\nimport { getDrones, getPlatforms } from '../../utils/API/shipments'\nimport Button from '../Button'\nimport Input from '../Input'\nimport Select from '../Select'\n\ninterface NewShipmentProps {\n  handleCancel: () => void\n  handleSubmit: (shipment: Shipment) => void\n}\n\nconst newShipment: Shipment = {\n  status: 'Ready',\n  id: '',\n  technician: '',\n  platform: '',\n  drone: '',\n  technicalCheck: 'Passed'\n}\n\nconst NewShipment = ({ handleCancel, handleSubmit }: NewShipmentProps) => {\n  const [form, setFormValue] = useState<Shipment>(newShipment)\n  const [showFormError, setFormErrorState] = useState<boolean>(false)\n  const handleInput = (name: string, value: string) => {\n    setFormValue({ ...form, [name]: value })\n\n    if (showFormError) {\n      setFormErrorState(false)\n    }\n  }\n  const validateForm = () => Object.values(form).every(x => x !== '')\n  const onSubmit = () => {\n    const isFormValid = validateForm()\n    if (isFormValid) {\n      handleSubmit(form)\n    } else {\n      setFormErrorState(true)\n    }\n  }\n  const fields = [\n    {\n      kind: 'input',\n      name: 'id',\n      type: 'text',\n      hasLabel: true,\n      labelText: 'Order ID',\n      placeholder: 'Order ID',\n      required: true\n    },\n    {\n      kind: 'input',\n      name: 'technician',\n      type: 'search',\n      hasLabel: true,\n      labelText: 'Technician',\n      placeholder: 'Technician name',\n      classList: 'search',\n      required: true\n    },\n    {\n      kind: 'select',\n      name: 'platform',\n      hasLabel: true,\n      labelText: 'Platform',\n      options: getPlatforms(),\n      placeholder: 'Select platform'\n    },\n    {\n      kind: 'select',\n      name: 'drone',\n      hasLabel: true,\n      labelText: 'Drone',\n      options: getDrones(),\n      placeholder: 'Select drone'\n    }\n  ]\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__fields\">\n        {fields.map((field) => {\n          const { kind } = field\n          switch (kind) {\n            case 'select':\n              return (\n                <Select\n                  name={field.name}\n                  hasLabel={field.hasLabel}\n                  labelText={field.labelText}\n                  options={field.options}\n                  handleChange={handleInput}\n                  value={form[field.name]}\n                  placeholder={field.placeholder}\n                  key={field.name}\n                />\n              )\n            case 'input':\n              return (\n                <Input\n                  name={field.name}\n                  placeholder={field.placeholder}\n                  type={field.type}\n                  hasLabel={field.hasLabel}\n                  labelText={field.labelText}\n                  handleInput={handleInput}\n                  key={field.name}\n                  value={form[field.name]}\n                  classList={field.classList}\n                  required={field.required}\n                />\n              )\n            default:\n              return null\n          }\n        })}\n      </div>\n      {showFormError && <p className=\"form__error\">All fields are required</p>}\n      <div className=\"form__actions\">\n        <Button handleClick={handleCancel} title=\"Cancel\" type=\"default\" />\n        <Button handleClick={onSubmit} title=\"Create new delivery\" type=\"primary\" />\n      </div>\n    </form>\n  )\n}\n\nexport default NewShipment\n","import { mockShipments } from '../../data/mockShipments'\nimport { Shipment } from '../../models/Shipment'\n\nconst getShipments = () =>\n  new Promise((resolve) => {\n    const storedShipments = localStorage.getItem('shipments')\n    const shipments: Shipment[] = storedShipments ? JSON.parse(storedShipments) : mockShipments\n    resolve(shipments)\n  })\n\nconst saveShipment = (shipment: Shipment, shipments: Shipment[]) =>\n  new Promise((resolve) => {\n    localStorage.setItem('shipments', JSON.stringify([shipment, ...shipments]))\n    resolve(true)\n  })\n\nconst getPlatforms = () => ['Alpha', 'Beta', 'Gamma']\n\nconst getTechnicians = () => ['Ben Santana', 'Juan Reynosa', 'Shan Smith', 'Gerardo Torres', 'Leonardo Flores', 'Miguel Obregón', 'Mariano Arribas', 'Jessica Salinas', 'Ernesto Garcia', 'Pedro Suarez']\n\nconst getDrones = () => ['DJI-004Q']\n\nexport { getShipments, saveShipment, getPlatforms, getTechnicians, getDrones }\n","import React from 'react'\n\nconst Loader = () => (\n    <div className=\"loader loader--show\">\n      <div className=\"loader__spinner\" />\n    </div>\n  )\n\nexport default Loader\n","import React, { useEffect } from 'react'\nimport Button from '../Button'\n\ninterface ModalProps {\n  title?: string\n  subtitle?: string\n  children: JSX.Element\n  handleClose: () => void\n}\n\nconst Modal = ({ title, subtitle, children, handleClose }: ModalProps) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden'\n\n    return () => { document.body.style.overflow = 'unset' }\n  }, [])\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__container\">\n        <div className=\"modal__close\">\n          <Button type=\"ghost\" icon={{position: 'left', name: 'close'}} title=\"\" handleClick={handleClose} />\n        </div>\n        <div className=\"modal__header\">\n          <h1 className=\"modal__title\">{title}</h1>\n          <p className=\"modal__subtitle\">{subtitle}</p>\n        </div>\n        <div className=\"modal__body\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nModal.defaultProps = {\n  title: '',\n  subtitle: ''\n};\n\nexport default Modal\n\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Button from '../../components/Button'\nimport NewShipment from '../../components/Forms/NewShipment'\nimport Input from '../../components/Input'\nimport Loader from '../../components/Loader'\nimport Modal from '../../components/Modal'\nimport Select from '../../components/Select'\nimport { Shipment } from '../../models/Shipment'\nimport { getShipments, saveShipment } from '../../utils/API/shipments'\n\nconst modal = {\n  title: 'New delivery',\n  subtitle:\n    'Please select the order ID and a technician to deploy the cargo. All elements are mandatory.'\n}\n\nconst Shipments = () => {\n  const history = useHistory()\n  const [isLoading, setLoading] = useState<boolean>(true)\n  const [shipments, setShipments] = useState<Shipment[] | []>([])\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [showModal, setModalState] = useState<boolean>(false)\n  const actions = ['Edit', 'Delete']\n  const handleSearch = (name: string, value: string) => {\n    setSearchQuery(value)\n  }\n  const executeAction = (action: string) => {\n    // eslint-disable-next-line no-console\n    console.log('click on ', action)\n  }\n  const createNewShipment = (shipment: Shipment) => {\n    saveShipment(shipment, shipments).then(() => {\n      setShipments([shipment, ...shipments])\n      setModalState(!showModal)\n    })\n  }\n  useEffect(() => {\n    getShipments().then((response: any) => {\n      setLoading(!isLoading)\n      setShipments(response)\n    })\n  }, [])\n\n  return (\n    <>\n      <div className=\"shipments\">\n        <div className=\"shipments__container\">\n          <div className=\"shipments__header\">\n            <h1 className=\"shipments__title\">\n              Delivery <span>History</span>\n            </h1>\n            <div className=\"shipments__actions\">\n              <Input\n                type=\"search\"\n                name=\"search\"\n                placeholder=\"Search\"\n                value={searchQuery}\n                handleInput={handleSearch}\n                classList=\"search\"\n              />\n              <Button\n                title=\"New delivery\"\n                type=\"primary\"\n                handleClick={() => setModalState(!showModal)}\n              />\n            </div>\n          </div>\n          <div className={`shipments__content ${isLoading && 'shipments__content--center'}`}>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <table className=\"shipments__table\">\n                <tbody>\n                  {shipments.length > 0 ? (\n                    shipments.map((shipment: Shipment) => (\n                      <tr className=\"shipments__table-row\" key={shipment.id}>\n                        <td className=\"shipments__table-cell shipments__table-cell--bold\">\n                          <span>Status</span>\n                          {shipment.status}\n                        </td>\n                        <td className=\"shipments__table-cell\">\n                          <span>Order ID</span>\n                          {shipment.id}\n                        </td>\n                        <td className=\"shipments__table-cell\">\n                          <span>Technician</span>\n                          {shipment.technician}\n                        </td>\n                        <td className=\"shipments__table-cell\">\n                          <span>Platform</span>\n                          {shipment.platform}\n                        </td>\n                        <td className=\"shipments__table-cell\">\n                          <span>Drone</span>\n                          {shipment.drone}\n                        </td>\n                        <td className=\"shipments__table-cell\">\n                          <span>Technical check</span>\n                          {shipment.technicalCheck}\n                        </td>\n                        <td className=\"shipments__table-cell\">\n                          <div className=\"shipments__table-actions\">\n                            <Button\n                              title=\"Details\"\n                              handleClick={() => history.push(`/shipment/${shipment.id}`)}\n                              type=\"default\"\n                              icon={{ position: 'right', name: 'window' }}\n                            />\n                            <Select\n                              name=\"actions\"\n                              placeholder=\"Actions\"\n                              options={actions}\n                              handleChange={executeAction}\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td className=\"shipments__table-cell empty-shipments\">No shipments available</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n      {showModal && (\n        <Modal {...modal} handleClose={() => setModalState(!showModal)}>\n          <NewShipment\n            handleCancel={() => setModalState(!showModal)}\n            handleSubmit={createNewShipment}\n          />\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default Shipments\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nconst ShipmentDetails = () => {\n  const { id } = useParams<{id: string}>();\n\n  return (\n    <div className=\"shipment-details\">\n      <div className=\"shipment-details__container\">\n        <h1 className=\"shipment-details__title\">{id}</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default ShipmentDetails\n\n","import React from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport * as Routes from './routes'\n\nconst App = () => (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/dronocargo\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/shipments\"/>\n          )}/>\n          <Route exact path=\"/shipments\" component={Routes.Shipments} />\n          <Route path=\"/shipment/:id\" component={Routes.ShipmentDetails} />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  )\n\nexport default App\n\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}